{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","status","useState","Array","fill","squares","setSquares","XisNext","setXisNext","renderSquare","i","calculateWinner","slice","handleClick","winner","Game","lines","length","a","b","c","render","document","getElementById"],"mappings":"gKAIA,SAASA,EAAOC,GACf,OACC,wBAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,WAAhD,SACEF,EAAMG,QAKV,SAASC,IAAS,IAmBbC,EAnBY,EACcC,mBAASC,MAAM,GAAGC,KAAK,OADrC,mBACTC,EADS,KACAC,EADA,OAEcJ,oBAAS,GAFvB,mBAETK,EAFS,KAEAC,EAFA,KAcVC,EAAe,SAACC,GACrB,OAAO,cAACf,EAAD,CAAQI,MAAOM,EAAQK,GAAIZ,QAAS,kBAXxB,SAACY,GAEhBC,EADeN,EAAQO,UACQP,EAAQK,KAG3CL,EAAQK,GAAKH,EAAU,IAAM,IAC7BD,EAAWD,GACXG,GAAYD,IAIqCM,CAAYH,OAGxDI,EAASH,EAAgBN,GAQ/B,OALCJ,EADGa,EACM,UAAYA,EAEZ,gBAAkBP,EAAU,IAAM,KAI3C,gCACC,qBAAKV,UAAU,SAAf,SAAyBI,IACzB,sBAAKJ,UAAU,YAAf,UACEY,EAAa,GACbA,EAAa,GACbA,EAAa,MAEf,sBAAKZ,UAAU,YAAf,UACEY,EAAa,GACbA,EAAa,GACbA,EAAa,MAEf,sBAAKZ,UAAU,YAAf,UACEY,EAAa,GACbA,EAAa,GACbA,EAAa,SAMlB,SAASM,IACR,OACC,sBAAKlB,UAAU,OAAf,UACC,qBAAKA,UAAU,aAAf,SACC,cAACG,EAAD,MAED,sBAAKH,UAAU,YAAf,UACC,wBACA,6BAMJ,SAASc,EAAgBN,GAWxB,IAVA,IAAMW,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECN,EAAI,EAAGA,EAAIM,EAAMC,OAAQP,IAAK,CAAC,IAAD,cACpBM,EAAMN,GADc,GAC/BQ,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GAAIf,EAAQa,IAAMb,EAAQa,KAAOb,EAAQc,IAAMd,EAAQa,KAAOb,EAAQe,GACrE,OAAOf,EAAQa,GAGjB,OAAO,KAKRG,iBAAO,cAACN,EAAD,IAAUO,SAASC,eAAe,U","file":"static/js/main.4ce331e9.chunk.js","sourcesContent":["import './index.css'\nimport { useState } from 'react'\nimport { render } from 'react-dom'\n\nfunction Square(props) {\n\treturn (\n\t\t<button className='square' onClick={() => props.onClick()}>\n\t\t\t{props.value}\n\t\t</button>\n\t)\n}\n\nfunction Board() {\n\tconst [squares, setSquares] = useState(Array(9).fill(null))\n\tconst [XisNext, setXisNext] = useState(true)\n\n\tconst handleClick = (i) => {\n\t\tconst newSquares = squares.slice()\n\t\tif (calculateWinner(newSquares) || squares[i]) {\n\t\t\treturn\n\t\t}\n\t\tsquares[i] = XisNext ? 'X' : 'O'\n\t\tsetSquares(squares)\n\t\tsetXisNext(!XisNext)\n\t}\n\n\tconst renderSquare = (i) => {\n\t\treturn <Square value={squares[i]} onClick={() => handleClick(i)} />\n\t}\n\n\tconst winner = calculateWinner(squares)\n\tlet status\n\tif (winner) {\n\t\tstatus = 'Winner ' + winner\n\t} else {\n\t\tstatus = 'Next player ' + (XisNext ? 'X' : 'O')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='status'>{status}</div>\n\t\t\t<div className='board-row'>\n\t\t\t\t{renderSquare(0)}\n\t\t\t\t{renderSquare(1)}\n\t\t\t\t{renderSquare(2)}\n\t\t\t</div>\n\t\t\t<div className='board-row'>\n\t\t\t\t{renderSquare(3)}\n\t\t\t\t{renderSquare(4)}\n\t\t\t\t{renderSquare(5)}\n\t\t\t</div>\n\t\t\t<div className='board-row'>\n\t\t\t\t{renderSquare(6)}\n\t\t\t\t{renderSquare(7)}\n\t\t\t\t{renderSquare(8)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction Game() {\n\treturn (\n\t\t<div className='game'>\n\t\t\t<div className='game-board'>\n\t\t\t\t<Board />\n\t\t\t</div>\n\t\t\t<div className='game-info'>\n\t\t\t\t<div>{/* status */}</div>\n\t\t\t\t<ol>{/* TODO */}</ol>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t]\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i]\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a]\n\t\t}\n\t}\n\treturn null\n}\n\n// ========================================\n\nrender(<Game />, document.getElementById('root'))\n"],"sourceRoot":""}